#!/bin/sh

# -----------------------------------------------------------------------------
# Gradle start up script for macOS/Linux
# -----------------------------------------------------------------------------

# Resolve APP_HOME, accounting for symlinks
PRG="$0"
while [ -h "$PRG" ]; do
  ls=$(ls -ld "$PRG")
  link=$(expr "$ls" : '.*-> \(.*\)$')
  if expr "$link" : '/.*' >/dev/null; then
    PRG="$link"
  else
    PRG=$(dirname "$PRG")"/$link"
  fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

CLASSPATH="$APP_HOME/gradle/wrapper/gradle-wrapper.jar"

# Determine the Java command
if [ -n "$JAVA_HOME" ] ; then
  if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
    JAVACMD="$JAVA_HOME/jre/sh/java"
  else
    JAVACMD="$JAVA_HOME/bin/java"
  fi
else
  JAVACMD="java"
fi

# Verify Java is available
if ! command -v "$JAVACMD" >/dev/null 2>&1 ; then
  echo "ERROR: Java executable not found. Set JAVA_HOME or ensure 'java' is on your PATH." 1>&2
  exit 1
fi

# OS detection
cygwin=false
msys=false
darwin=false
case "`uname`" in
  CYGWIN* ) cygwin=true ;;
  MINGW* ) msys=true ;;
  MSYS* ) msys=true ;;
  Darwin* ) darwin=true ;;
	esac

# For Cygwin/MSYS, convert paths to Windows format before running java
if $cygwin || $msys ; then
  APP_HOME=`cygpath --path --mixed "$APP_HOME"`
  CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
  JAVACMD=`cygpath --unix "$JAVACMD"`
fi

# JVM and Gradle options
DEFAULT_JVM_OPTS=""
GRADLE_OPTS="${GRADLE_OPTS:-}"

# Build the command line
exec "$JAVACMD" \
  $DEFAULT_JVM_OPTS \
  $JAVA_OPTS \
  $GRADLE_OPTS \
  -Dorg.gradle.appname=gradlew \
  -classpath "$CLASSPATH" \
  org.gradle.wrapper.GradleWrapperMain "$@"
